name: schedule maintenance

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 7 * * *'
  workflow_dispatch:
  repository_dispatch:
    types:
      - loop-schedule

concurrency: scheduler

jobs:
  check:
    name: check conditions
    environment: scheduler
    permissions:
      contents: none
    runs-on: ubuntu-latest
    outputs:
      workflows: ${{ steps.filtered.outputs.json }}
    steps:
      - name: set up graph
        id: graph
        uses: nickofthyme/object-remap@v2.0.0
        with:
          none: '["create"]'
          create: '["maintain"]'
          maintain: '["backup"]'
          backup: '["delete"]'
      - name: filter graph
        id: filtered
        uses: nickofthyme/object-remap@v2.0.0
        with:
          workflow: ${{ toJson(fromJson(steps.graph.outputs.json)[github.event_name != 'repository_dispatch' && 'none' || github.event.client_payload.trigger]) }}

  invoke:
    name: invoke ${{ matrix.workflow }}
    environment: scheduler
    needs: check
    permissions:
      contents: write
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.check.outputs.workflows) }}
    steps:
      - name: dispatch ${{ matrix.workflow }} workflow
        uses: peter-evans/repository-dispatch@v2.1.2
        with:
          event-type: scheduled-${{ matrix.workflow }}
          client-payload: |
            {
              "ref": "${{ github.event_name == 'repository_dispatch' && github.event.client_payload.ref || github.ref }}",
              "sha": "${{ github.event_name == 'repository_dispatch' && github.event.client_payload.sha || github.sha }}"
            }
