name: backup

on: workflow_dispatch

concurrency: github

jobs:
  list-backups:
    name: list older backups
    uses: ./.github/workflows/gcloud.yml
    secrets: inherit
    permissions:
      contents: read
      id-token: write
    with:
      subcommand: machine-images list
        --sort-by=name
        --filter=${{ vars.INSTANCE }}-r

  check:
    name: check instance
    uses: ./.github/workflows/gcloud.yml
    secrets: inherit
    permissions:
      contents: read
      id-token: write
    with:
      zone_param: zone
      subcommand: instances describe ${{ vars.INSTANCE }}

  backup:
    name: backup instance
    needs:
      - list-backups
      - check
    uses: ./.github/workflows/gcloud.yml
    secrets: inherit
    permissions:
      contents: read
      id-token: write
    with:
      location_param: storage-location
      zone_param: source-instance-zone
      subcommand: machine-images create ${{ vars.INSTANCE }}-r${{ github.run_number }}
        --source-instance=${{ vars.INSTANCE }}
        --description="GitHub Runner on ${{ vars.SYSTEM_DESCRIPTION }}"

  verify:
    name: verify backup
    needs: backup
    permissions:
      contents: none
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest
    steps:
      - name: fail if backup didn't succeed
        if: fromJSON(needs.backup.outputs.result)[0].status != 'READY'
        uses: actions/github-script@v6.4.1
        with:
          script: core.setFailed("backup completed with unexpected status ${{ fromJSON(needs.backup.outputs.result)[0].status }}")
      - name: check backup size
        uses: actions/github-script@v6.4.1
        with:
          script: |
            const sizeInMB = ${{ fromJSON(needs.backup.outputs.result)[0].totalStorageBytes }} / 1024 / 1024
            core.info(`backup size is ${sizeInMB} MB`)

  delete:
    name: delete backup ${{ matrix.image.name }}
    needs:
      - list-backups
      - verify
    uses: ./.github/workflows/gcloud.yml
    strategy:
      matrix:
        image: ${{ fromJSON(needs.list-backups.outputs.result) }}
    secrets: inherit
    permissions:
      contents: read
      id-token: write
    with:
      subcommand: machine-images delete ${{ matrix.image.name }}
