name: gcloud

on:
  workflow_call:
    inputs:
      subcommand:
        required: true
        type: string
      command:
        required: false
        type: string
        default: beta compute
      expect_failure:
        required: false
        type: boolean
        default: false
      expect_output:
        required: false
        type: boolean
        default: true
      location_param:
        required: false
        type: string
        default: ''
      zone_param:
        required: false
        type: string
        default: ''
    outputs:
      result:
        description: the resulting json of the executed command
        value: ${{ jobs.execute.outputs.result }}

jobs:
  execute:
    name: execute ${{ inputs.command == 'beta compute' && 'compute' || inputs.command }} job
    environment: google cloud
    defaults:
      run:
        shell: bash
    permissions:
      contents: read
      id-token: write
    outputs:
      result: ${{ steps.command.outputs.result }}
    runs-on: ubuntu-latest
    steps:
      - name: check out repository
        uses: actions/checkout@v4.1.0
      - id: auth
        name: authenticate to Google Cloud
        uses: google-github-actions/auth@v1.1.1
        with:
          workload_identity_provider: ${{ secrets.ID_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
      - name: set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1.1.1
        with:
          skip_install: true
          version: ''
          project_id: github-matfax
      - name: set up latest Node.js LTS
        uses: actions/setup-node@v3.7.0
        with:
          node-version: lts/Hydrogen
          cache: npm
      - name: install node dependencies
        run: npm ci
      - name: execute gcloud ${{ inputs.command }} job
        id: command
        uses: ./gcloud
        with:
          subcommand: ${{ inputs.subcommand }}
          command: ${{ inputs.command }}
          expect_failure: ${{ inputs.expect_failure }}
          expect_output: ${{ inputs.expect_output }}
          location: ${{ vars.location }}
          zone: ${{ vars.zone }}
          location_name: ${{ inputs.location_param }}
          zone_name: ${{ inputs.zone_param }}
